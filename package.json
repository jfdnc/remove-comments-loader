{
  "_args": [
    [
      "stripcomment2-loader",
      "E:\\work\\kiln\\SpreadJS\\Sheets\\Source"
    ]
  ],
  "_from": "stripcomment2-loader@*",
  "_id": "stripcomment2-loader@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/stripcomment2-loader",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "email": "ingwie2000@googlemail.com",
    "name": "ingwiephoenix"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "name": "stripcomment2-loader",
    "raw": "stripcomment2-loader",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "http://myproget.grapecity.net/npm/npm/stripcomment2-loader/-/stripcomment2-loader-0.1.0.tgz",
  "_shasum": "0ffb7109989f12a9bf38f7f2e58a353a20e5b3eb",
  "_shrinkwrap": null,
  "_spec": "stripcomment2-loader",
  "_where": "E:\\work\\kiln\\SpreadJS\\Sheets\\Source",
  "author": {
    "email": "ingwie2000@gmail.com",
    "name": "Ingwie Phoenix"
  },
  "bugs": {
    "url": "https://github.com/IngwiePhoenix/commentstrip-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^0.2.7",
    "strip-comments": "^0.3.2"
  },
  "description": "WebPack plugin to effectively strip comments",
  "devDependencies": {},
  "dist": {
    "shasum": "0ffb7109989f12a9bf38f7f2e58a353a20e5b3eb",
    "tarball": "http://myproget.grapecity.net/npm/npm/stripcomment2-loader/-/stripcomment2-loader-0.1.0.tgz"
  },
  "homepage": "https://github.com/IngwiePhoenix/commentstrip-loader",
  "keywords": [
    "comments",
    "strip"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "stripcomment2-loader",
  "optionalDependencies": {},
  "readme": "# `stripcomments-loader` - A tiny loader to blanken your code.\n\nWhile using UglifyJS over WebPack, I realized that the comments weren't stripped, actually. So I decided to write this loader that processes files and cleans them from comments - EXCEPT when debugging is enabled.\n\n## Usage\nIt's recommended to use this as a `preLoaders` entry to process multiple files that use either `//` or `/* ... */` as comment indicators. Examples include JavaScript and CSS.\n\n```javascript\nmodule.exports = {\n    entry: \"./test.js\",\n    output: {\n        path: __dirname,\n        filename: \"bundle.js\"\n    },\n    module: {\n        preLoaders: [\n            {\n                test: /\\.(js|css)$/,\n                loader: \"stripcomments?-lines\"\n            }\n        ]\n    }\n}\n```\n\nNow just require any JS or CSS file, and you should see comments getting stripped.\n\nTo retain comments, set `debug: true`. In this case, comments are kept in-place.\n\n## Query options\nYou can control which and what is stripped:\n\n    stripcomments?-block\n\nThis will **only** strip block comments. Adding `-line` will **only** strip line comments. Supplying both or none, then all will be stripped. Passing `+safe` will have extra effects on which comments are to be removed.\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IngwiePhoenix/commentstrip-loader.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
